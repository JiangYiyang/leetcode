bool isMatch(char * s, char * p){
    int len_p = strlen(p);
    int len_s = strlen(s);
    printf("p= %d,s=%d\n",len_p,len_s);
    int j = 0;
    int tmp = 0;
    // 本题思路：从p来找匹配，如果能从头到位都一致，则true。如果中间出现不匹配或者到结尾发现双方有一方冗余，则false。
    for(int i = 0; i < len_p; i++){
        // 这时候对p的情况进行区分，分别为"字母"，"."与"*"。
        // 而其中有几个特殊的组合为：（字母用c来表示）
        // "c*",".*"需要特殊对待
        if(p[i] == '.'){
            // 1. 常规情况，"."后跟"正常字母"或者"."，与"字母"跟"字母"相同，i和j都加1即可
            if((p[i+1] >= 'a' && p[i+1] <= 'z') || p[i+1] == '.'){
                // j对应s中字母的位置，如果正常情况，则i++,j++
                j++;
                printf("情况1\n");
                continue;
            }

            if(p[i+1] == '*'){
                // 2. j对应s中字母的位置，如果后面跟着"*"则可以让s的i增加到不再相同位置。但是同时这个可以直接忽略
                // 对于.的情况不会不匹配，如果s中不是两个连续的，则直接相当于跳过.*
                tmp = j;
                // 检测对应字符是否连续,如果不连续，tmp == j,如果连续，tmp>j
                while(s[j] == s[tmp+1]){
                    tmp++;
                }
                //没有两个及以上,则跳过
                if(tmp == j){
                    i++;
                    printf("情况2,跳过\n");
                    continue;
                }
                // 如果有，
                if(tmp > j){
                    j = tmp + 1;
                    printf("情况2,有多个\n");
                    continue;
                }
            }
        }

        if(p[i] >= 'a' && p[i] <= 'z'){
            if(s[j] == p[i]){
                // 3. 常规情况，"c"后跟"c"或者"."，i和j都加1即可
                if((p[i+1] >= 'a' && p[i+1] <= 'z') || p[i+1] == '.' && p[i+1] != '*'){
                    // j对应s中字母的位置，如果相等，则i++,j++
                        j++;
                        printf("情况3,\n");
                        continue;
                }

                if(p[i+1] == '*'){
                    // 4. j对应s中字母的位置，如果后面跟着"*"则可以让s的i增加到不再相同位置。但是同时这个可以直接忽略
                    // 对于.的情况不会不匹配，如果s中不是两个连续的，则直接相当于跳过.*
                    tmp = j;
                    // 检测对应字符是否连续,如果不连续，tmp == j,如果连续，tmp>j
                    while(s[j] == s[tmp+1]){
                        tmp++;
                    }
                    //没有两个及以上,则跳过
                    if(tmp == j){
                        i++;
                        printf("情况2,无多个\n");
                        continue;
                    }
                    // 如果有，
                    if(tmp > j){
                        j = tmp + 1;
                        printf("情况4,有多个\n");
                        continue;
                    }
                }
            }
            else{
                printf("字母不匹配\n");
                return false;
            }
        }
         printf("i= %d,j=%d\n",i,j);
    }
    if(j != len_s){
        return false;
    }
    return true;
}
