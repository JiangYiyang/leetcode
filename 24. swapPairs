//执行用时 :0 ms, 在所有 c 提交中击败了100.00%的用户
//内存消耗 :7 MB, 在所有 c 提交中击败了97.35%的用户
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* swapPairs(struct ListNode* head){
    if(head == NULL){
        return 0;
    }
    if(head->next == NULL){
        return head;
    }
    // 用ini来代表链表头，一定是第二个链表
    struct ListNode *ini = head->next;
    struct ListNode *tmp, *tmp1;
    tmp = head->next;
    while(head->next != NULL && tmp->next != NULL && tmp->next->next != NULL){
        tmp1 = tmp->next;
        head->next = tmp->next->next;
        tmp->next = head;
        head = tmp1;
        tmp = head->next;
        // printf("tmp=%d",tmp->val);
        // printf("tmp->next->val=%d",tmp->next->val);
    }
    if(tmp->next == NULL){
        // printf("tmp->next = NULL");
        tmp->next = head;
        head->next = NULL;
    }
    if(tmp->next->next == NULL){
        head->next = tmp->next;
        tmp->next = head;
        head->next->next = NULL;
    }

    return ini;
}
